name: Run Unit Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
      
jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository 🧐
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
        shell: 'bash'
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-
      - name: Install dependencies
        run: |
          if ${{ steps.yarn-cache.outputs.cache-hit }} = 'true'
          then
            echo "Cache hit - skipping dependency installation"
          else
            yarn install --frozen-lockfile
          fi
      - run: yarn test

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository 🧐
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
        shell: 'bash'
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-
      - name: Install dependencies
        run: |
          if ${{ steps.yarn-cache.outputs.cache-hit }} = 'true'
          then
            echo "Cache hit - skipping dependency installation"
          else
            yarn install --frozen-lockfile
          fi
      - run: yarn build
